<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SOOJIN BLOG</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 21 Sep 2022 15:19:04 +0900</pubDate>
    <lastBuildDate>Wed, 21 Sep 2022 15:19:04 +0900</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      <item>
        <title>클래스와 인스턴스</title>
        <description>&lt;blockquote&gt;
  &lt;h2 id=&quot;클래스와-인스턴스는-무엇일까&quot;&gt;클래스와 인스턴스는 무엇일까?&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;클래스와 인스턴스가 무엇인가에 대해 말하기 위해서 &lt;strong&gt;객체 지향 프로그래밍&lt;/strong&gt;에 대해 알아보아야 한다.&lt;/p&gt;

&lt;p&gt;객체 지향 프로그래밍은 설계도라고 할 수 있는 하나의 청사진을 만들고, 그 청사진을 바탕으로 한 객체를 만드는 프로그래밍 패턴이다.&lt;/p&gt;

&lt;p&gt;✔ 객체 지향 프로그래밍의 청사진을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;클래스&lt;/code&gt; 라고 부른다.
&lt;br /&gt;
✔ 청사진을 바탕으로 한 객체, 인스턴스 객체(instance object)를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;라고 부른다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;객체는-어떤-식으로-만들어질까&quot;&gt;객체는 어떤 식으로 만들어질까?&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;객체는 일반적인 함수를 정의하듯 만든다. 하지만 함수와 이용하는 방법이 조금은 다르다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;new&lt;/code&gt;라는 키워드를 사용하여 새로운 인스턴스를 만든다.&lt;/li&gt;
  &lt;li&gt;일반적인 다른 함수와 구분하기 위해 클래스를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;대문자&lt;/code&gt;로 시작하는 일반명사로 만든다.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;클래스를-만드는-문법&quot;&gt;클래스를 만드는 문법&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;클래스를 만드는 문법으로 ES5 와 ES6가 주로 사용되며 현재는 ES6가 주로 사용된다고 한다. ES6는 클래스를 만드는 새로운 문법으로 class 키워드를 이용하여&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ES5 와 ES6의 클래스 작성 문법&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ES5 : 함수로 정의할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function Laptop(brand, name, color){
  this.brand = brand;
  this.name = name;
  this.color = color;
}
//Laptop이 class, function은 생성자 함수

Laptop.prototype.recharge = function(){
  //배터리 충전을 구현하는 코드
}
Laptop.prototype.operate = function(){
  // 시스템을 실행하는 코드
}

let gram = new Laptop(&apos;LG&apos;, &apos;gram&apos;, &apos;white&apos;);// 인스턴스
gram.color; // &apos;white&apos;
gram.recharge(); //그램이 배터리를 충전합니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;ES6 : class라는 키워드를 이용해서 정의할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; class Laptop{
    constructor(brand, name, color){
  this.brand = brand;
  this.name = name;
  this.color = color;
}

recharge() {

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;✔ 여기서 보이는 함수는 객체지향 프로그래밍에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;생성자(constructor) 함수&lt;/code&gt; 라고 부르며, 인스턴스가 만들어질 때 실행되는 코드이다. 생성자 함수는 return 값을 만들지 않는다.&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Sep 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2022-09/%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4</link>
        <guid isPermaLink="true">http://localhost:4000/2022-09/%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4</guid>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>객체 지향 프로그래밍(OOP)</title>
        <description>&lt;blockquote&gt;
  &lt;h2 id=&quot;객체-지향-프로그래밍oop&quot;&gt;객체 지향 프로그래밍(OOP)&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;객체 지향 프로그래밍&lt;/code&gt; 이라는 패러다임이 등장하며, 별개의 변수와 함수로 순차적으로 작동하는 것을 넘어, 데이터의 접근과, 데이터의 처리 과정에 대한 모형을 만들어 내는 방식을 고안해내었다. =&amp;gt; &lt;strong&gt;데이터와 기능을 한 번에 묶어 처리가능&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OOP는 프로그램 설계 철학이다.&lt;/li&gt;
  &lt;li&gt;OOP의 모든 것은 ‘객체’로 그룹화된다.&lt;/li&gt;
  &lt;li&gt;OOP의 4가지 주요 개념(캡슐화, 추상화, 상속, 다형성)을 통해 재사용성을 얻을 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;객체 지향 프로그래밍에서는&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; class&lt;/code&gt;에는 공통적인 기능과 고유의 속성이 존재하는데 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;constructor(생성자 함수)&lt;/code&gt;를 이용해 고유의 값인 속성과 메소드를 부여하면서 각각의&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; instance&lt;/code&gt;를 만들어 낸다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;oop-basic-concepts&quot;&gt;OOP Basic Concepts&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Encapsulation(캡슐화)&lt;/li&gt;
  &lt;li&gt;Inheritance(상속)&lt;/li&gt;
  &lt;li&gt;Abstraction(추상화)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Polymorphism(다형성)&lt;/p&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;h4&gt;캡슐화 Encapsulation
&lt;/h4&gt;
    &lt;/blockquote&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터와 기능을 하나의 단위(객체)로 묶는 것&lt;/li&gt;
      &lt;li&gt;은닉(hiding): 구현은 숨기고, 동작만 노출시킴&lt;/li&gt;
      &lt;li&gt;느슨한 결합(Loose Coupling)에 유리: 언제든 구현 수정 가능&lt;/li&gt;
      &lt;li&gt;코드가 복잡하지 않게 만들고, 재사용성을 높인다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;h4&gt;추상화 Abstraction
&lt;/h4&gt;
    &lt;/blockquote&gt;

    &lt;ul&gt;
      &lt;li&gt;내부 구현은 복잡하지만, 실제로 노출되는 부분은 단순하게 만드는 것이 추상화이다. 이러한 추상화를 통해 인터페이스가 단순해진다. 많은 기능이 노출되지 않으므로 예기치 못한 사용상의 변화가 발생하지 않도록 만들 수 있다.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;코드가 복잡하지 않게 만들고, 단순하된 사용으로 변화에 대한 영향을 최소화&lt;/p&gt;

        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;blockquote&gt;
      &lt;h4&gt;상속 Inheritance
&lt;/h4&gt;
    &lt;/blockquote&gt;

    &lt;ul&gt;
      &lt;li&gt;상속은 부모 클래스의 특징을 자식 클래스가 물려받는 것을 말한다.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;불필요한 코드를 줄여 재사용성을 높인다.&lt;/p&gt;

        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;blockquote&gt;
      &lt;h4&gt;다형성 Polymorphism
&lt;/h4&gt;
    &lt;/blockquote&gt;

    &lt;ul&gt;
      &lt;li&gt;객체마다 똑같은 메서드를 사용하더라도 그 메서드가 조금씩 다르게 작동하는 것을 말한다.&lt;/li&gt;
      &lt;li&gt;조건문 대신 객체의 특성에 맞게 달리 작성이 가능하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 21 Sep 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2022-09/%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D</link>
        <guid isPermaLink="true">http://localhost:4000/2022-09/%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D</guid>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>Section 1 회고</title>
        <description>&lt;h2 id=&quot;1-내가-여기서-얻고-싶은게-무엇인가&quot;&gt;1. 내가 여기서 얻고 싶은게 무엇인가?&lt;/h2&gt;

&lt;p&gt;Section 1 동안에 나의 목표는 무엇인가?에 대해 꾸준히 상기하며 보내지는 않았던 것 같다.&lt;/p&gt;

&lt;p&gt;그냥 그날 그날의 주어진 내용을 습득하기에 급급했고 따라가는 것만으로도 다행이었다.&lt;/p&gt;

&lt;p&gt;그래서 지금에 회고를 하면서 다시 내 목표는 무엇이고 여기서 무엇을 얻고 싶었었는지에 대해 다시 한번 생각해본다.&lt;/p&gt;

&lt;p&gt;이곳에서 나는 개발자에게 요구되는 역량(전문적인 지식, 노하우, …)을 얻고 싶었고 개발자가 되기 위한 방향성을 잡고 싶었다.&lt;/p&gt;

&lt;p&gt;현재 돌이켜보면 아직은 시작이기 때문에 확실하게 말할 건 없지만 그래도 무지하게 어렵지만 개발에 대한 흥미는 점점 더 생기고 있다.&lt;/p&gt;

&lt;p&gt;새로운 내용을 배우고 습득하면서 버거울 때도 있지만 &lt;strong&gt;새로운 것을 배우면서 즐기는 개발자&lt;/strong&gt;가 되고 싶다는 생각과 목표가 생겼다.&lt;/p&gt;

&lt;h2 id=&quot;2-keep-problem&quot;&gt;2. Keep, Problem&lt;/h2&gt;

&lt;h3 id=&quot;목표를-달성하기-위해-했던-노력은-무엇이며-반드시-유지해야할-노력은-무엇인가keep&quot;&gt;&lt;strong&gt;목표를 달성하기 위해 했던 노력은 무엇이며 반드시 유지해야할 노력은 무엇인가?&lt;/strong&gt;(&lt;strong&gt;keep)&lt;/strong&gt;&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;매일 2시간 이상 배운 내용 복습하기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;주 2회 이상 30분 운동하기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자기주도적 학습 습관 들이기(궁금한 내용 바로 찾아보기, 이해 안되면 넘어가고 나중에 다시 찾아보기)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;주말 중 하루는 공부하기&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;목표를 달성하기 위해 위와 같은 노력을 했었고 다 유지해야 한다고 생각한다. 아주 기본적인 노력이기 때문이다.&lt;/p&gt;

&lt;p&gt;여기서 더 노력을 안하면 발전할 수 없으니까 ^^&lt;/p&gt;

&lt;h3 id=&quot;목표를-달성하는데-있어서-가장-큰-장애물은-무엇이었는가-problem&quot;&gt;&lt;strong&gt;목표를 달성하는데 있어서 가장 큰 장애물은 무엇이었는가? (problem)&lt;/strong&gt;&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;공부할 체력이 너무 부족했다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;일정한 시간에 잠들지 않아 몸 생체리듬이 좋지 못했다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;일어나는 것은 힘들지 않지만 자는게 어렵다. 불면증이 나아지긴 했지만 매일 새벽 1시 이전에는 잘 수 있도록 노력하고 영양제랑 운동을 열심히 해서 체력을 길러야 겠다. 체력이 없으니까 아무것도 할 수가 없었다. 공부를 하고 싶어도 몸이 안 따라주면 서럽고 슬프고 자괴감이 들어서 내 몸을 열심히 단련해야겠다고 생각했다.&lt;/p&gt;

&lt;h2 id=&quot;3-tryaction&quot;&gt;3. Try(Action)&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;새벽 1시 이전에 자기( 잠 안와도 핸드폰 보지 말기)&lt;/li&gt;
  &lt;li&gt;힘들어도 근력 운동하기(반드시 쉬운 운동만 하지 않고 일어나서 하는 운동하자…)&lt;/li&gt;
  &lt;li&gt;밥을 잘 챙겨 먹어서 영양분 섭취를 잘 해야겠다…&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-우선순위&quot;&gt;4. 우선순위&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Try 1. 새벽 1시 이전에 반드시 자기(절대 핸드폰 보지 말기).&lt;/li&gt;
  &lt;li&gt;Try 2. 밥을 잘 챙겨 먹기(하루에 2끼 이상은 먹기)&lt;/li&gt;
  &lt;li&gt;Try 3. 힘들어도 근력 운동하기(쉬운 운동만 하지 말기)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 19 Sep 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2022-09/Section1</link>
        <guid isPermaLink="true">http://localhost:4000/2022-09/Section1</guid>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>Some articles are just so long they deserve a really long title to see if things will break well</title>
        <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit. Proin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Jul 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2018-07/t1</link>
        <guid isPermaLink="true">http://localhost:4000/2018-07/t1</guid>
        
        
        <category>travel</category>
        
      </item>
    
      <item>
        <title>Sample Post</title>
        <description>&lt;p&gt;This is a sample post.&lt;br /&gt;
&lt;dfn info=&quot;You can add extra information&quot;&gt;Hover&lt;/dfn&gt; me.&lt;/p&gt;

&lt;h2 id=&quot;header&quot;&gt;Header&lt;/h2&gt;

&lt;h1 id=&quot;head-1-&quot;&gt;Head 1: ‘#’&lt;/h1&gt;
&lt;h2 id=&quot;head-2-&quot;&gt;Head 2: ‘##’&lt;/h2&gt;
&lt;h3 id=&quot;head-3-&quot;&gt;Head 3: ‘###’&lt;/h3&gt;

&lt;h2 id=&quot;code-block&quot;&gt;Code block&lt;/h2&gt;
&lt;p&gt;A Python Example:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Socrates
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;The only true wisdom is in knowing you know nothing.&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A HTML Example:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;quote&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Maya Angelou --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Try to be a rainbow in someone&apos;s cloud.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A C Example:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Confucius&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Everything has beauty, but not everyone sees it.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 01 Nov 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017-11/s2</link>
        <guid isPermaLink="true">http://localhost:4000/2017-11/s2</guid>
        
        
        <category>writing</category>
        
      </item>
    
  </channel>
</rss>